{"version":3,"sources":["logo.svg","actions/index.js","components/characterList.js","components/Herolist.js","components/Squatstats.js","components/App.js","serviceWorker.js","reducers/helpers.js","reducers/characters_reducers.js","reducers/heroes_reducers.js","reducers/index.js","index.js"],"names":["module","exports","ADD_CHARACTERS","REMOVE_CHARACTERS","removeCharacterById","id","type","Characterlist","console","log","this","props","className","characters","map","char","key","name","onClick","addCharacterById","Component","connect","state","Herolist","heroes","length","hero","Squadstats","strength","forEach","intelligence","speed","App","Squatstats","Boolean","window","location","hostname","match","createCharacters","characters_json","find","c","action","filter","item","createcharacters","rootReducers","combineReducers","store","createStore","RootReducer","subscribe","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cfdf6011.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","export const ADD_CHARACTERS = 'ADD_CHARACTERS';\r\n\r\nexport function addCharacterById(id) {\r\n    const action = {\r\n        type: ADD_CHARACTERS,\r\n        id\r\n    }\r\n    return action;\r\n}\r\n\r\nexport const REMOVE_CHARACTERS = 'REMOVE_CHARACTERS';\r\n\r\nexport function removeCharacterById(id){\r\n    const action = {\r\n        type: REMOVE_CHARACTERS,\r\n        id\r\n    }\r\n\r\n    return action;\r\n}","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { addCharacterById } from '../actions';\r\nimport '../styles/index.css'\r\n\r\nclass Characterlist extends Component {\r\n    render(){\r\n        console.log('props from the store', this.props)\r\n        return( \r\n            <div>\r\n                <div>\r\n                    <h4>Characters</h4>\r\n                    <ul className=\"list-group\">\r\n                        {\r\n                            this.props.characters.map((char) => {\r\n                                return (\r\n                                    <li key={char.id} className=\"list-group-item\">\r\n                                        <div className=\"list-item\">{char.name}</div>\r\n                                        <div className=\"list-item right-btn\" onClick={() => this.props.addCharacterById(char.id)}>\r\n                                            +\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        'characters': state.characters,\r\n    }\r\n}\r\n\r\n// function mapDispatchToProps(dispatch){\r\n//     return bindActionCreators({addCharacterById}, dispatch);\r\n// }\r\n\r\nexport default connect(mapStateToProps, {addCharacterById} )(Characterlist);\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { removeCharacterById } from '../actions';\r\nimport '../styles/index.css'\r\n\r\nclass Herolist extends Component {\r\n    render(){\r\n        console.log('props from the store', this.props)\r\n        return( \r\n            <div>\r\n                {this.props.heroes.length > 0 ?\r\n                <div>\r\n                    <h4>Your Hero Squad</h4>\r\n                    <ul className=\"list-group\">\r\n                        {\r\n                            this.props.heroes.map((hero) => {\r\n                                return(\r\n                                <li key={hero.id} className=\"list-group-item\">\r\n                                    <div className=\"list-item\">\r\n                                        {hero.name}\r\n                                    </div>\r\n                                    <div className=\"list-item right-btn\" onClick={() => this.props.removeCharacterById(hero.id)}>\r\n                                        x\r\n                                    </div>\r\n                                </li> )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div> : null }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        'heroes': state.heroes\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return bindActionCreators({removeCharacterById}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, {removeCharacterById} )(Herolist);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Squadstats extends Component {\r\n    strength(){\r\n        let strength = 0;\r\n        this.props.heroes.forEach((hero) => strength += hero.strength);\r\n        return strength;\r\n    }\r\n    intelligence(){\r\n        let intelligence = 0;\r\n        this.props.heroes.forEach((hero) => intelligence += hero.intelligence);\r\n        return intelligence;\r\n    }\r\n    speed(){\r\n        let speed = 0;\r\n        this.props.heroes.forEach((hero) => speed += hero.speed);\r\n        return speed;\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h4>Squad Stats</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <b>Overall Strength: </b> {this.strength()}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <b>Overall Intelligence: </b> {this.intelligence()}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <b>Overall Speed: </b> {this.speed()}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        heroes: state.heroes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Squadstats)","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from '../logo.svg';\nimport './App.css';\nimport Characterlist from './characterList';\nimport Herolist from './Herolist';\nimport Squatstats from './Squatstats';\n\nclass App extends Component {\n  render(){\n    return <div className=\"App\">\n      <h2>Super Squad</h2>\n      <div className=\"col-md-4\">\n        <Characterlist />\n      </div>\n      <div className=\"col-md-4\">\n        <Herolist />\n      </div>\n      <div className=\"col-md-4\">\n        <Squatstats />\n      </div>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_CHARACTERS } from '../actions/index.js';\r\nimport characters_json from '../data/characters.json';\r\n\r\nfunction createCharacters(id){\r\n    let characters = characters_json.find(c => c.id === id);\r\n    return characters;\r\n}\r\n\r\nexport default createCharacters;","import { ADD_CHARACTERS, REMOVE_CHARACTERS } from '../actions/index.js';\r\nimport createcharacters from './helpers';\r\nimport characters_json from '../data/characters.json';\r\n\r\n\r\nfunction characters(state=characters_json, action){\r\n    switch(action.type){\r\n        case ADD_CHARACTERS:\r\n            let characters = state.filter(item => item.id !== action.id);\r\n            return characters;\r\n\r\n        case REMOVE_CHARACTERS:\r\n            let characterUnremoved = [...state, createcharacters(action.id)];\r\n            return characterUnremoved;\r\n            \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default characters;","import { ADD_CHARACTERS, REMOVE_CHARACTERS } from '../actions/index.js';\r\nimport characters_json from '../data/characters.json';\r\nimport createcharacters from './helpers';\r\n\r\n\r\nfunction heroes(state=[], action){\r\n    switch(action.type){\r\n        default: \r\n            return state;\r\n        case ADD_CHARACTERS:\r\n            let heroes = [...state, createcharacters(action.id)];\r\n            return heroes;   \r\n\r\n        case REMOVE_CHARACTERS:\r\n            let heroesDeleted = state.filter(hero => hero.id !== action.id);\r\n            return heroesDeleted;\r\n    }\r\n}\r\n\r\n\r\nexport default heroes;","import characters_json from '../data/characters.json';\r\nimport { ADD_CHARACTERS } from '../actions/index.js';\r\nimport { combineReducers } from 'redux';\r\nimport characters from './characters_reducers';\r\nimport heroes from './heroes_reducers';\r\n\r\n\r\n\r\nfunction createCharcaters(id){\r\n    let characters = characters_json.find(c => c.id === id);\r\n    return characters;\r\n}\r\n\r\nconst rootReducers = combineReducers({\r\n    characters,\r\n    heroes\r\n})\r\n\r\nexport default rootReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport RootReducer from './reducers';\nimport { addCharacterById } from './actions';\n\nconst store = createStore(RootReducer);\n\nstore.subscribe(() => console.log(store.getState()));\n// store.dispatch(addCharacterById(2)); \n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}